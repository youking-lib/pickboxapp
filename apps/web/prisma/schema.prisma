generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  avatar        String?
  anonymous     Boolean   @default(false)
  createdAt     DateTime  @default(now())

  key          Key[]
  auth_session Session[]
  token        Token[]
}

model Session {
  id             String @id @unique
  user_id        String
  active_expires BigInt
  idle_expires   BigInt
  user           User   @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
}

model Key {
  id              String  @id @unique
  hashed_password String?
  user_id         String
  user            User    @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
}

model Token {
  id      String    @id @default(cuid())
  token   String    @unique
  expires DateTime?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User?  @relation(fields: [userId], references: [id])
  userId String

  File File[]

  @@index([userId])
}

model File {
  id   String @id @default(cuid())
  key  String @unique // aws s3 path
  hash String @unique // file md5 hash

  name      String
  path      String
  size      Decimal
  type      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  token   Token?  @relation(fields: [tokenId], references: [id])
  tokenId String?
}
